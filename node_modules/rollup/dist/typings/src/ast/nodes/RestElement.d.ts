import Node from '../Node';
import { UnknownAssignment } from '../values';
import Pattern from './Pattern';
import ExecutionPathOptions from '../ExecutionPathOptions';
import Expression from './Expression';
import Scope from '../scopes/Scope';
import Declaration from './Declaration';
import { ObjectPath } from '../variables/VariableReassignmentTracker';
export default class RestElement extends Node {
    type: 'RestElement';
    argument: Pattern;
    reassignPath(path: ObjectPath, options: ExecutionPathOptions): void;
    hasEffectsWhenAssignedAtPath(path: ObjectPath, options: ExecutionPathOptions): boolean;
    initialiseAndDeclare(parentScope: Scope, kind: string, _init: Declaration | Expression | UnknownAssignment | null): void;
}
