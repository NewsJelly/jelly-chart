import TaggedTemplateExpression from "./nodes/TaggedTemplateExpression";
import CallExpression from "./nodes/CallExpression";
import Expression from './nodes/Expression';
import NewExpression from "./nodes/NewExpression";
import Property from "./nodes/Property";
export interface CallCreateOptions {
    withNew: boolean;
    args?: Expression[];
    caller: TaggedTemplateExpression | CallExpression | NewExpression | Property | void;
}
export default class CallOptions {
    withNew: boolean;
    args: Expression[];
    caller: TaggedTemplateExpression | CallExpression | NewExpression | Property | void;
    static create(callOptions: CallCreateOptions): CallOptions;
    constructor({withNew, args, caller}?: CallCreateOptions);
    equals(callOptions: CallOptions): boolean;
}
